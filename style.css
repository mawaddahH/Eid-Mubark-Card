/* Custom font setup for use throughout the page */
@font-face {
  font-family: 'EidFont'; /* Assigns a name to the custom font for reference */
  src: url('fontAli.ttf') format('truetype'); /* Specifies the font file and format */
  font-weight: normal; /* Default font weight */
  font-style: normal; /* Default font style */
}

body {
  display: flex;
  flex-direction: column; /* Stacks child elements vertically */
  align-items: center; /* Centers child elements horizontally */
  margin: 0; /* Removes default body margin */
  padding-top: 20px; /* Adds spacing at the top of the page */
  background-color: #fff; /* Sets background color to white */
  text-align: center; /* Centers inline or inline-block children */
  font-family: Arial; /* Default font family for the page */
}

/* Styles that target specific elements or classes to adjust text alignment */
#imagePicker, #colorPicker, .parent-container {
  text-align: right; /* Aligns text to the right, useful for RTL languages */
}

/* Ensures certain elements stretch to occupy the full available width */
.image-container, .controls, button {
  align-items: flex-start; /* Aligns child elements to the start of the cross axis */
  width: 100%; /* Makes the element width equal to 100% of its parent's width */
}

.controls {
  align-items: flex-start; /* Specifically targets the .controls class for alignment */
}

/* Styles for a container that houses related elements, adopting a row layout for RTL support */
.parent-container {
  display: flex;
  align-items: center; /* Vertically centers the flex items */
  flex-direction: row-reverse; /* Lays out children from right to left */
  justify-content: flex-start; /* Aligns children to the start (right side) */
  gap: 10px; /* Space between each child element */
}

/* Flexbox setup for grouping inputs with their labels */
.input-group {
  display: flex;
  align-items: center; /* Centers items vertically */
}

/* General styling for container elements holding images and control buttons */
.image-container, .controls {
  display: flex;
  flex-direction: column; /* Stacks children vertically */
  align-items: center; /* Centers children horizontally */
  justify-content: center; /* Centers children vertically */
  margin-top: 20px; /* Adds spacing above these containers */
}

#imageCanvas {
  border: 1px solid #ccc; /* Adds a light grey border around the canvas */
}

/* Styling for input elements, including custom background and borders */
input[type="text"], #nameInput {
  padding: 10px; /* Adds padding inside the inputs for better text visibility */
  margin-bottom: 10px; /* Adds space below the inputs */
  border: 1px solid #ccc; /* Light grey border for distinction */
  border-radius: 5px; /* Rounds the corners of the inputs */
  background: transparent; /* Transparent background for a clean look */
  position: relative; /* Allows absolute positioning of child elements relative to this */
  text-align: center; /* Centers the text inside the inputs */
  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px; /* Adds a subtle shadow for depth */
}

/* Adjusts the background color of input fields when they are focused */
input[type="text"]:focus, #nameInput:focus {
  outline: none; /* Removes the default focus outline */
  background-color: #ededed; /* Sets a light grey background to indicate focus */
}

/* General styling for buttons, including dimensions, colors, and hover effects */
button {
  background-color: rgba(51, 51, 51, 0.05); /* Very light grey background */
  border-radius: 8px; /* Rounded corners for a modern look */
  border-width: 0; /* Removes the default border */
  color: #333333; /* Dark grey text color for contrast */
  cursor: pointer; /* Changes the cursor to a pointer to indicate it's clickable */
  font-size: 14px; /* Sets the font size */
  font-weight: 500; /* Medium font weight for emphasis */
  line-height: 20px; /* Adjusts the space between lines of text */
  margin: 20px; /* Adds space around the button */
  padding: 10px 12px; /* Inner padding for better text visibility */
  text-align: center; /* Centers the button text */
  transition: all 200ms; /* Smooth transition for background and shadow changes */
  width: 300px; /* Sets a fixed width for the buttons */
}

/* Enhances the button appearance when hovered over */
button:hover {
  background-color: #45a049; /* Changes background to a green color on hover */
  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px; /* Adds a shadow for depth */
}

/* Flexbox layout adjustments for image and color picker sections, similar to parent-container but specific to these features */
#imagePicker, #colorPicker {
  display: flex;
  align-items: center; /* Vertically centers items */
  flex-direction: row-reverse; /* Arranges items from right to left for RTL support */
  justify-content: flex-start; /* Aligns items to the right */
  gap: 10px; /* Adds spacing between items */
}

/* Styling for labels within the imagePicker and colorPicker, including background and shadow for depth */
#imagePicker label, #colorPicker label {
  margin: 5px; /* Adds margin around each label */
  display: flex;
  align-items: center; /* Centers label content vertically */
  box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px; /* Adds subtle shadow for depth */
}

/* Styles for the color choice indicators within the color picker */
.color-choice {
  display: inline-flex; /* Allows the element to be inline but also use flex properties */
  align-items: center; /* Centers content vertically */
  justify-content: center; /* Centers content horizontally */
  width: 30px; /* Fixed width */
  height: 30px; /* Fixed height */
  border-radius: 50%; /* Makes the element circular */
  margin: 0 10px; /* Adds horizontal margin for spacing */
  cursor: pointer; /* Indicates the element is clickable */
  position: relative; /* Allows for absolute positioning of children */
}

/* Hides the actual radio input in the color picker and positions the custom tick mark */
#colorPicker input[type="radio"] {
  opacity: 0; /* Makes the radio button invisible */
  position: absolute; /* Positions the radio button absolutely within its parent */
}

/* Initially hides the tick mark used to indicate a selected color */
#colorPicker .tick-mark {
  display: none; /* Hidden by default */
}

#colorPicker input[type="radio"]:checked + .tick-mark {
  display: block; /* Makes the tick-mark visible when the radio button is checked */
  color: #fff; /* Sets tick mark color to white for visibility against colorful backgrounds */
  position: absolute; /* Positions the tick mark precisely over the color choice */
  font-size: 18px; /* Size of the tick mark for clear visibility */
}

span:not(.tick-mark) {
  color: #333; /* Sets a darker color for text for better readability */
  font-weight: bold; /* Makes the non-tick mark text bolder to stand out */
  margin-bottom: 15px; /* Adds space below the text for cleaner separation of sections */
}

#imagePicker label {
  background-color: #fff; /* Sets a default white background for label */
  padding: 10px 15px; /* Adds padding inside the label for spacing around text */
  border-radius: 5px; /* Rounds the corners of the label */
  border: 1px solid #ddd; /* Sets a light grey border for the label */
  margin: 5px 0; /* Adds margin above and below the label for spacing */
  cursor: pointer; /* Changes the cursor to a pointer to indicate the label is clickable */
  transition: background-color 0.3s ease, border-color 0.3s ease; /* Smooth transition for background and border color changes */
}

#imagePicker label:hover,
#imagePicker input[type="radio"]:checked + label {
  background-color: #e8e8e8; /* Changes background to a light grey on hover and when selected */
}

#imagePicker input[type="radio"]:checked + label {
  background-color: #d1e8ff; /* Light blue background for selected state for better visibility */
  border-color: #b6d4f2; /* Light blue border for selected state for consistency */
}

#imagePicker input[type="radio"]:focus + label {
  outline: 2px solid blue; /* Adds a blue outline for accessibility on focus */
}


#imagePicker input[type="radio"] {
  opacity: 0; /* Makes radio input invisible */
  position: absolute; /* Takes it out of the normal document flow */
  width: 0; /* Removes width */
  height: 0; /* Removes height */
}

.modal {
  display: none; /* Initially hidden */
  position: fixed; /* Stays in the same place during scrolling */
  z-index: 1000; /* Ensures it stays on top of other content */
  left: 0; top: 0; /* Positions it at the top left corner */
  width: 100%; height: 100%; /* Covers the entire viewport */
  overflow: auto; /* Enables scrolling if the content is larger than the viewport */
  background-color: rgba(0,0,0,0.4); /* Semi-transparent black background */
}

.modal-content {
  background-color: #fefefe; /* White background for the content */
  margin: 15% auto; /* Centers the modal vertically and horizontally */
  padding: 20px; /* Padding inside the modal */
  border: 1px solid #888; /* Border around the modal */
  width: 80%; /* Takes up 80% of the viewport width */
  max-width: 400px; /* But not more than 400px */
  text-align: center; /* Centers the text inside the modal */
}

.close-button {
  color: #aaa; /* Light grey color for the button */
  float: right; /* Positions it to the right */
  font-size: 28px; /* Large size for easy clicking */
  font-weight: bold; /* Bold for emphasis */
}

.close-button:hover,
.close-button:focus {
  color: black; /* Dark color on hover/focus for better visibility */
  text-decoration: none; /* Removes underline on focus */
  cursor: pointer; /* Indicates it's clickable */
}
